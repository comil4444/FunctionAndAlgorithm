
package com.opentext.livelink.service.recman;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "RecordsManagement", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
@XmlSeeAlso({
    com.opentext.livelink.service.recman.ObjectFactory.class,
    com.opentext.livelink.service.docman.ObjectFactory.class,
    com.opentext.livelink.service.core.ObjectFactory.class,
    com.opentext.ecm.api.ObjectFactory.class
})
public interface RecordsManagement {


    /**
     * 
     * @param nodeID
     * @return
     *     returns java.util.List<com.opentext.livelink.service.recman.RMHoldDocInfo>
     */
    @WebMethod(operationName = "RMShowAllHolds", action = "urn:RecMan.service.livelink.opentext.com/RMShowAllHolds")
    @WebResult(name = "RMShowAllHoldsResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "RMShowAllHolds", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMShowAllHolds")
    @ResponseWrapper(localName = "RMShowAllHoldsResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMShowAllHoldsResponse")
    public List<RMHoldDocInfo> rmShowAllHolds(
        @WebParam(name = "nodeID", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        long nodeID);

    /**
     * 
     * @param nodeID
     * @return
     *     returns java.util.List<com.opentext.livelink.service.recman.RMHoldDocInfo>
     */
    @WebMethod(operationName = "RMShowParentHolds", action = "urn:RecMan.service.livelink.opentext.com/RMShowParentHolds")
    @WebResult(name = "RMShowParentHoldsResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "RMShowParentHolds", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMShowParentHolds")
    @ResponseWrapper(localName = "RMShowParentHoldsResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMShowParentHoldsResponse")
    public List<RMHoldDocInfo> rmShowParentHolds(
        @WebParam(name = "nodeID", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        long nodeID);

    /**
     * 
     * @param nodeID
     * @param classID
     * @param additionalInfo
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "RMUpdateDetails", action = "urn:RecMan.service.livelink.opentext.com/RMUpdateDetails")
    @WebResult(name = "RMUpdateDetailsResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "RMUpdateDetails", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMUpdateDetails")
    @ResponseWrapper(localName = "RMUpdateDetailsResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMUpdateDetailsResponse")
    public boolean rmUpdateDetails(
        @WebParam(name = "nodeID", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        long nodeID,
        @WebParam(name = "classID", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        long classID,
        @WebParam(name = "AdditionalInfo", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        RMAdditionalInfo additionalInfo);

    /**
     * 
     * @param functionsList
     * @return
     *     returns java.util.List<com.opentext.livelink.service.recman.RMFuncAccess>
     */
    @WebMethod(operationName = "RMUserFunctionalAccess", action = "urn:RecMan.service.livelink.opentext.com/RMUserFunctionalAccess")
    @WebResult(name = "RMUserFunctionalAccessResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "RMUserFunctionalAccess", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMUserFunctionalAccess")
    @ResponseWrapper(localName = "RMUserFunctionalAccessResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMUserFunctionalAccessResponse")
    public List<RMFuncAccess> rmUserFunctionalAccess(
        @WebParam(name = "functionsList", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        List<Integer> functionsList);

    /**
     * 
     * @param holdID
     * @return
     *     returns com.opentext.livelink.service.recman.HoldDistribution
     */
    @WebMethod(operationName = "HoldCollectInfo", action = "urn:RecMan.service.livelink.opentext.com/HoldCollectInfo")
    @WebResult(name = "HoldCollectInfoResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "HoldCollectInfo", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.HoldCollectInfo")
    @ResponseWrapper(localName = "HoldCollectInfoResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.HoldCollectInfoResponse")
    public HoldDistribution holdCollectInfo(
        @WebParam(name = "HoldID", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        long holdID);

    /**
     * 
     * @param holdID
     * @param parents
     * @param itemsAndChildren
     * @param boxesOfChildren
     * @param pageNumber
     * @param classParents
     * @param boxContents
     * @param itemsPerPage
     * @param classChildren
     * @param boxesOfParent
     * @param classifiedItems
     * @return
     *     returns com.opentext.livelink.service.recman.HoldPage
     */
    @WebMethod(operationName = "HoldRetrieveItems", action = "urn:RecMan.service.livelink.opentext.com/HoldRetrieveItems")
    @WebResult(name = "HoldRetrieveItemsResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "HoldRetrieveItems", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.HoldRetrieveItems")
    @ResponseWrapper(localName = "HoldRetrieveItemsResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.HoldRetrieveItemsResponse")
    public HoldPage holdRetrieveItems(
        @WebParam(name = "HoldID", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        long holdID,
        @WebParam(name = "ItemsPerPage", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        int itemsPerPage,
        @WebParam(name = "PageNumber", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        int pageNumber,
        @WebParam(name = "itemsAndChildren", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        boolean itemsAndChildren,
        @WebParam(name = "parents", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        boolean parents,
        @WebParam(name = "classifiedItems", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        boolean classifiedItems,
        @WebParam(name = "boxContents", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        boolean boxContents,
        @WebParam(name = "boxesOfParent", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        boolean boxesOfParent,
        @WebParam(name = "boxesOfChildren", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        boolean boxesOfChildren,
        @WebParam(name = "classParents", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        boolean classParents,
        @WebParam(name = "classChildren", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        boolean classChildren);

    /**
     * 
     * @param nodeID
     * @param secClassIDs
     * @param classID
     * @param additionalInfo
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "RMApplyClassification", action = "urn:RecMan.service.livelink.opentext.com/RMApplyClassification")
    @WebResult(name = "RMApplyClassificationResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "RMApplyClassification", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMApplyClassification")
    @ResponseWrapper(localName = "RMApplyClassificationResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMApplyClassificationResponse")
    public boolean rmApplyClassification(
        @WebParam(name = "nodeID", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        long nodeID,
        @WebParam(name = "classID", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        long classID,
        @WebParam(name = "AdditionalInfo", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        RMAdditionalInfo additionalInfo,
        @WebParam(name = "secClassIDs", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        List<Long> secClassIDs);

    /**
     * 
     * @param holdID
     * @param nodeID
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "RMApplyHold", action = "urn:RecMan.service.livelink.opentext.com/RMApplyHold")
    @WebResult(name = "RMApplyHoldResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "RMApplyHold", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMApplyHold")
    @ResponseWrapper(localName = "RMApplyHoldResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMApplyHoldResponse")
    public boolean rmApplyHold(
        @WebParam(name = "nodeID", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        long nodeID,
        @WebParam(name = "holdID", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        long holdID);

    /**
     * 
     * @param provenanceIDs
     * @param nodeID
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "RMApplyProvenances", action = "urn:RecMan.service.livelink.opentext.com/RMApplyProvenances")
    @WebResult(name = "RMApplyProvenancesResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "RMApplyProvenances", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMApplyProvenances")
    @ResponseWrapper(localName = "RMApplyProvenancesResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMApplyProvenancesResponse")
    public boolean rmApplyProvenances(
        @WebParam(name = "NodeID", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        long nodeID,
        @WebParam(name = "provenanceIDs", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        List<Long> provenanceIDs);

    /**
     * 
     * @param nodeID
     * @param classID
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "RMApplySecondaryClassification", action = "urn:RecMan.service.livelink.opentext.com/RMApplySecondaryClassification")
    @WebResult(name = "RMApplySecondaryClassificationResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "RMApplySecondaryClassification", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMApplySecondaryClassification")
    @ResponseWrapper(localName = "RMApplySecondaryClassificationResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMApplySecondaryClassificationResponse")
    public boolean rmApplySecondaryClassification(
        @WebParam(name = "NodeID", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        long nodeID,
        @WebParam(name = "ClassID", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        long classID);

    /**
     * 
     * @param holdID
     * @param nodeIDList
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "RMBatchApplyHold", action = "urn:RecMan.service.livelink.opentext.com/RMBatchApplyHold")
    @WebResult(name = "RMBatchApplyHoldResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "RMBatchApplyHold", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMBatchApplyHold")
    @ResponseWrapper(localName = "RMBatchApplyHoldResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMBatchApplyHoldResponse")
    public boolean rmBatchApplyHold(
        @WebParam(name = "NodeIDList", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        List<Long> nodeIDList,
        @WebParam(name = "holdID", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        long holdID);

    /**
     * 
     * @param nodeIDList
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "RMBatchMarkOfficial", action = "urn:RecMan.service.livelink.opentext.com/RMBatchMarkOfficial")
    @WebResult(name = "RMBatchMarkOfficialResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "RMBatchMarkOfficial", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMBatchMarkOfficial")
    @ResponseWrapper(localName = "RMBatchMarkOfficialResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMBatchMarkOfficialResponse")
    public boolean rmBatchMarkOfficial(
        @WebParam(name = "NodeIDList", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        List<Long> nodeIDList);

    /**
     * 
     * @param nodeIDList
     * @param classIDList
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "RMBatchRemoveClassification", action = "urn:RecMan.service.livelink.opentext.com/RMBatchRemoveClassification")
    @WebResult(name = "RMBatchRemoveClassificationResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "RMBatchRemoveClassification", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMBatchRemoveClassification")
    @ResponseWrapper(localName = "RMBatchRemoveClassificationResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMBatchRemoveClassificationResponse")
    public boolean rmBatchRemoveClassification(
        @WebParam(name = "NodeIDList", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        List<Long> nodeIDList,
        @WebParam(name = "ClassIDList", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        List<Long> classIDList);

    /**
     * 
     * @param holdID
     * @param nodeIDList
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "RMBatchRemoveHold", action = "urn:RecMan.service.livelink.opentext.com/RMBatchRemoveHold")
    @WebResult(name = "RMBatchRemoveHoldResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "RMBatchRemoveHold", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMBatchRemoveHold")
    @ResponseWrapper(localName = "RMBatchRemoveHoldResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMBatchRemoveHoldResponse")
    public boolean rmBatchRemoveHold(
        @WebParam(name = "NodeIDList", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        List<Long> nodeIDList,
        @WebParam(name = "holdID", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        long holdID);

    /**
     * 
     * @param nodeIDList
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "RMBatchRemoveOfficial", action = "urn:RecMan.service.livelink.opentext.com/RMBatchRemoveOfficial")
    @WebResult(name = "RMBatchRemoveOfficialResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "RMBatchRemoveOfficial", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMBatchRemoveOfficial")
    @ResponseWrapper(localName = "RMBatchRemoveOfficialResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMBatchRemoveOfficialResponse")
    public boolean rmBatchRemoveOfficial(
        @WebParam(name = "NodeIDList", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        List<Long> nodeIDList);

    /**
     * 
     * @param nodeIDList
     * @param classID
     * @param additionalInfo
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "RMBatchUpdate", action = "urn:RecMan.service.livelink.opentext.com/RMBatchUpdate")
    @WebResult(name = "RMBatchUpdateResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "RMBatchUpdate", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMBatchUpdate")
    @ResponseWrapper(localName = "RMBatchUpdateResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMBatchUpdateResponse")
    public boolean rmBatchUpdate(
        @WebParam(name = "NodeIDList", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        List<Long> nodeIDList,
        @WebParam(name = "classID", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        long classID,
        @WebParam(name = "AdditionalInfo", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        RMAdditionalInfo additionalInfo);

    /**
     * 
     * @return
     *     returns java.util.List<com.opentext.livelink.service.recman.RMClassDefInfo>
     */
    @WebMethod(operationName = "RMClassificationFavorites", action = "urn:RecMan.service.livelink.opentext.com/RMClassificationFavorites")
    @WebResult(name = "RMClassificationFavoritesResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "RMClassificationFavorites", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMClassificationFavorites")
    @ResponseWrapper(localName = "RMClassificationFavoritesResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMClassificationFavoritesResponse")
    public List<RMClassDefInfo> rmClassificationFavorites();

    /**
     * 
     * @param pickListType
     * @return
     *     returns java.util.List<com.opentext.livelink.service.recman.RMClassDefInfo>
     */
    @WebMethod(operationName = "RMClassificationPickList", action = "urn:RecMan.service.livelink.opentext.com/RMClassificationPickList")
    @WebResult(name = "RMClassificationPickListResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "RMClassificationPickList", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMClassificationPickList")
    @ResponseWrapper(localName = "RMClassificationPickListResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMClassificationPickListResponse")
    public List<RMClassDefInfo> rmClassificationPickList(
        @WebParam(name = "PickListType", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        int pickListType);

    /**
     * 
     * @param holdInfo
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "RMCreateHold", action = "urn:RecMan.service.livelink.opentext.com/RMCreateHold")
    @WebResult(name = "RMCreateHoldResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "RMCreateHold", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMCreateHold")
    @ResponseWrapper(localName = "RMCreateHoldResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMCreateHoldResponse")
    public boolean rmCreateHold(
        @WebParam(name = "HoldInfo", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        RMHoldInfo holdInfo);

    /**
     * 
     * @param nodeID
     * @param docXRefTyp
     * @param xNodeID
     * @param xComments
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "RMCreateXReference", action = "urn:RecMan.service.livelink.opentext.com/RMCreateXReference")
    @WebResult(name = "RMCreateXReferenceResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "RMCreateXReference", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMCreateXReference")
    @ResponseWrapper(localName = "RMCreateXReferenceResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMCreateXReferenceResponse")
    public boolean rmCreateXReference(
        @WebParam(name = "NodeID", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        long nodeID,
        @WebParam(name = "xNodeID", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        long xNodeID,
        @WebParam(name = "DocXRefTyp", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        String docXRefTyp,
        @WebParam(name = "xComments", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        String xComments);

    /**
     * 
     * @param nodeID
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "RMDeclareRecord", action = "urn:RecMan.service.livelink.opentext.com/RMDeclareRecord")
    @WebResult(name = "RMDeclareRecordResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "RMDeclareRecord", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMDeclareRecord")
    @ResponseWrapper(localName = "RMDeclareRecordResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMDeclareRecordResponse")
    public boolean rmDeclareRecord(
        @WebParam(name = "NodeID", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        long nodeID);

    /**
     * 
     * @param holdID
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "RMDeleteHold", action = "urn:RecMan.service.livelink.opentext.com/RMDeleteHold")
    @WebResult(name = "RMDeleteHoldResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "RMDeleteHold", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMDeleteHold")
    @ResponseWrapper(localName = "RMDeleteHoldResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMDeleteHoldResponse")
    public boolean rmDeleteHold(
        @WebParam(name = "HoldID", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        long holdID);

    /**
     * 
     * @param classID
     * @return
     *     returns java.util.List<com.opentext.livelink.service.recman.RMClassDefInfo>
     */
    @WebMethod(operationName = "RMGetClassificationChildren", action = "urn:RecMan.service.livelink.opentext.com/RMGetClassificationChildren")
    @WebResult(name = "RMGetClassificationChildrenResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "RMGetClassificationChildren", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMGetClassificationChildren")
    @ResponseWrapper(localName = "RMGetClassificationChildrenResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMGetClassificationChildrenResponse")
    public List<RMClassDefInfo> rmGetClassificationChildren(
        @WebParam(name = "ClassID", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        long classID);

    /**
     * 
     * @param nodeID
     * @return
     *     returns com.opentext.livelink.service.recman.RMClassDefInfo
     */
    @WebMethod(operationName = "RMGetClassificationInfo", action = "urn:RecMan.service.livelink.opentext.com/RMGetClassificationInfo")
    @WebResult(name = "RMGetClassificationInfoResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "RMGetClassificationInfo", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMGetClassificationInfo")
    @ResponseWrapper(localName = "RMGetClassificationInfoResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMGetClassificationInfoResponse")
    public RMClassDefInfo rmGetClassificationInfo(
        @WebParam(name = "NodeID", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        long nodeID);

    /**
     * 
     * @return
     *     returns com.opentext.livelink.service.recman.RMClassDefInfo
     */
    @WebMethod(operationName = "RMGetClassificationRoot", action = "urn:RecMan.service.livelink.opentext.com/RMGetClassificationRoot")
    @WebResult(name = "RMGetClassificationRootResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "RMGetClassificationRoot", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMGetClassificationRoot")
    @ResponseWrapper(localName = "RMGetClassificationRootResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMGetClassificationRootResponse")
    public RMClassDefInfo rmGetClassificationRoot();

    /**
     * 
     * @param nodeID
     * @return
     *     returns com.opentext.livelink.service.recman.RMAdditionalInfo
     */
    @WebMethod(operationName = "RMGetClassifyInfo", action = "urn:RecMan.service.livelink.opentext.com/RMGetClassifyInfo")
    @WebResult(name = "RMGetClassifyInfoResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "RMGetClassifyInfo", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMGetClassifyInfo")
    @ResponseWrapper(localName = "RMGetClassifyInfoResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMGetClassifyInfoResponse")
    public RMAdditionalInfo rmGetClassifyInfo(
        @WebParam(name = "NodeID", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        long nodeID);

    /**
     * 
     * @param classIDList
     * @return
     *     returns java.util.List<com.opentext.livelink.service.recman.RMClassProvider>
     */
    @WebMethod(operationName = "RMGetClassProvider", action = "urn:RecMan.service.livelink.opentext.com/RMGetClassProvider")
    @WebResult(name = "RMGetClassProviderResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "RMGetClassProvider", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMGetClassProvider")
    @ResponseWrapper(localName = "RMGetClassProviderResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMGetClassProviderResponse")
    public List<RMClassProvider> rmGetClassProvider(
        @WebParam(name = "ClassIDList", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        List<Long> classIDList);

    /**
     * 
     * @return
     *     returns com.opentext.livelink.service.recman.RMCodesInfo
     */
    @WebMethod(operationName = "RMGetCodes", action = "urn:RecMan.service.livelink.opentext.com/RMGetCodes")
    @WebResult(name = "RMGetCodesResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "RMGetCodes", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMGetCodes")
    @ResponseWrapper(localName = "RMGetCodesResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMGetCodesResponse")
    public RMCodesInfo rmGetCodes();

    /**
     * 
     * @param objectType
     * @return
     *     returns com.opentext.livelink.service.recman.RMAttributeGroupDefinition
     */
    @WebMethod(operationName = "RMGetFieldInfos", action = "urn:RecMan.service.livelink.opentext.com/RMGetFieldInfos")
    @WebResult(name = "RMGetFieldInfosResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "RMGetFieldInfos", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMGetFieldInfos")
    @ResponseWrapper(localName = "RMGetFieldInfosResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMGetFieldInfosResponse")
    public RMAttributeGroupDefinition rmGetFieldInfos(
        @WebParam(name = "objectType", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        String objectType);

    /**
     * 
     * @param bActive
     * @return
     *     returns java.util.List<com.opentext.livelink.service.recman.RMHoldInfo>
     */
    @WebMethod(operationName = "RMGetHolds", action = "urn:RecMan.service.livelink.opentext.com/RMGetHolds")
    @WebResult(name = "RMGetHoldsResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "RMGetHolds", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMGetHolds")
    @ResponseWrapper(localName = "RMGetHoldsResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMGetHoldsResponse")
    public List<RMHoldInfo> rmGetHolds(
        @WebParam(name = "bActive", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        boolean bActive);

    /**
     * 
     * @return
     *     returns java.util.List<com.opentext.livelink.service.recman.RMManagedTypeInfo>
     */
    @WebMethod(operationName = "RMGetManagedTypes", action = "urn:RecMan.service.livelink.opentext.com/RMGetManagedTypes")
    @WebResult(name = "RMGetManagedTypesResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "RMGetManagedTypes", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMGetManagedTypes")
    @ResponseWrapper(localName = "RMGetManagedTypesResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMGetManagedTypesResponse")
    public List<RMManagedTypeInfo> rmGetManagedTypes();

    /**
     * 
     * @param rsi
     * @return
     *     returns com.opentext.livelink.service.recman.RMRSIRetention
     */
    @WebMethod(operationName = "RMGetRSIRetention", action = "urn:RecMan.service.livelink.opentext.com/RMGetRSIRetention")
    @WebResult(name = "RMGetRSIRetentionResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "RMGetRSIRetention", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMGetRSIRetention")
    @ResponseWrapper(localName = "RMGetRSIRetentionResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMGetRSIRetentionResponse")
    public RMRSIRetention rmGetRSIRetention(
        @WebParam(name = "RSI", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        String rsi);

    /**
     * 
     * @param nodeID
     * @return
     *     returns java.util.List<com.opentext.livelink.service.recman.RMXRefInfo>
     */
    @WebMethod(operationName = "RMGetXReference", action = "urn:RecMan.service.livelink.opentext.com/RMGetXReference")
    @WebResult(name = "RMGetXReferenceResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "RMGetXReference", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMGetXReference")
    @ResponseWrapper(localName = "RMGetXReferenceResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMGetXReferenceResponse")
    public List<RMXRefInfo> rmGetXReference(
        @WebParam(name = "NodeID", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        long nodeID);

    /**
     * 
     * @param nodeID
     * @return
     *     returns java.util.List<com.opentext.livelink.service.recman.ProvenanceInfo>
     */
    @WebMethod(operationName = "RMListProvenances", action = "urn:RecMan.service.livelink.opentext.com/RMListProvenances")
    @WebResult(name = "RMListProvenancesResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "RMListProvenances", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMListProvenances")
    @ResponseWrapper(localName = "RMListProvenancesResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMListProvenancesResponse")
    public List<ProvenanceInfo> rmListProvenances(
        @WebParam(name = "NodeID", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        long nodeID);

    /**
     * 
     * @param nodeID
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "RMMarkOfficial", action = "urn:RecMan.service.livelink.opentext.com/RMMarkOfficial")
    @WebResult(name = "RMMarkOfficialResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "RMMarkOfficial", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMMarkOfficial")
    @ResponseWrapper(localName = "RMMarkOfficialResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMMarkOfficialResponse")
    public boolean rmMarkOfficial(
        @WebParam(name = "NodeID", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        long nodeID);

    /**
     * 
     * @param nodeID
     * @param classIDList
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "RMRemoveClassification", action = "urn:RecMan.service.livelink.opentext.com/RMRemoveClassification")
    @WebResult(name = "RMRemoveClassificationResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "RMRemoveClassification", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMRemoveClassification")
    @ResponseWrapper(localName = "RMRemoveClassificationResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMRemoveClassificationResponse")
    public boolean rmRemoveClassification(
        @WebParam(name = "NodeID", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        long nodeID,
        @WebParam(name = "ClassIDList", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        List<Long> classIDList);

    /**
     * 
     * @param holdID
     * @param nodeID
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "RMRemoveHold", action = "urn:RecMan.service.livelink.opentext.com/RMRemoveHold")
    @WebResult(name = "RMRemoveHoldResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "RMRemoveHold", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMRemoveHold")
    @ResponseWrapper(localName = "RMRemoveHoldResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMRemoveHoldResponse")
    public boolean rmRemoveHold(
        @WebParam(name = "nodeID", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        long nodeID,
        @WebParam(name = "holdID", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        long holdID);

    /**
     * 
     * @param nodeID
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "RMRemoveOfficial", action = "urn:RecMan.service.livelink.opentext.com/RMRemoveOfficial")
    @WebResult(name = "RMRemoveOfficialResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "RMRemoveOfficial", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMRemoveOfficial")
    @ResponseWrapper(localName = "RMRemoveOfficialResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMRemoveOfficialResponse")
    public boolean rmRemoveOfficial(
        @WebParam(name = "NodeID", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        long nodeID);

    /**
     * 
     * @param provenanceIDs
     * @param nodeID
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "RMRemoveProvenances", action = "urn:RecMan.service.livelink.opentext.com/RMRemoveProvenances")
    @WebResult(name = "RMRemoveProvenancesResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "RMRemoveProvenances", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMRemoveProvenances")
    @ResponseWrapper(localName = "RMRemoveProvenancesResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMRemoveProvenancesResponse")
    public boolean rmRemoveProvenances(
        @WebParam(name = "NodeID", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        long nodeID,
        @WebParam(name = "provenanceIDs", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        List<Long> provenanceIDs);

    /**
     * 
     * @param nodeID
     * @param docXRefTyp
     * @param xNodeID
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "RMRemoveXReference", action = "urn:RecMan.service.livelink.opentext.com/RMRemoveXReference")
    @WebResult(name = "RMRemoveXReferenceResult", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
    @RequestWrapper(localName = "RMRemoveXReference", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMRemoveXReference")
    @ResponseWrapper(localName = "RMRemoveXReferenceResponse", targetNamespace = "urn:RecMan.service.livelink.opentext.com", className = "com.opentext.livelink.service.recman.RMRemoveXReferenceResponse")
    public boolean rmRemoveXReference(
        @WebParam(name = "NodeID", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        long nodeID,
        @WebParam(name = "xNodeID", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        long xNodeID,
        @WebParam(name = "DocXRefTyp", targetNamespace = "urn:RecMan.service.livelink.opentext.com")
        String docXRefTyp);

}
